ver 2021-09-27

Prog-X demo: scope
------------------

- imp006 breakout board

- Configuration is hardcoded

- Data from sensors:
  - Temperature

- Alerts:
  - Temperature High
  - Temperature Low
  - Shock Detected
  - Motion Started
  - Motion Stopped

- Location determination by:
  - first - GNSS,
  - then - cell info

- Motion start detection using Accelerometer

- Motion stop detection using Location (+ Accelerometer for confirmation)

- Device is disconnected most of time
- Connected only when data sending to imp-agent is needed

- No bufferization on imp-agent side
- Messages are forwarded to the cloud's REST API
  -- POST https://<cloud_api_url>/data
  -- Basic authentication - username/password are hardcoded
  -- Body with data in text (JSON) format
  -- Response code 200 from the cloud if the request/data is accepted
- The cloud's REST API is emulated on another imp

Out of scope in the demo:
-------------------------
- Runtime configuration (Southbound API)
- Location determination using BLE beacons
- Location determination using WiFi
- Geofencing
- Battery level
- Tamper detection
- Shipping mode
- Back-off for GNSS fix
- Recovery mode
- Safeguards for non-effective cfg
- Super SIM OTA update

----------------------------------------
DETAILS
----------------------------------------
Data polling:
-------------
- Temperature
- Battery Level (not in demo)

Alerts
------
By event:
- Shock Detected
- Motion Started
- Motion Stopped
- Geofence Entered (not in demo)
- Geofence Exited (not in demo)
By polling:
- Temperature High
- Temperature Low
- Battery Low (not in demo)

Initialization Function (called after Imp restart)
-----------------------
- (not in demo) Read from a permanent memory and apply:
  -- Configuration
  -- Latest location
  -- Geofence inside/outside
  -- Latest status (TBD)
- If some data is not read, hardcoded defaults are used:
  -- Default configuration
  -- "Zero"/invalid/default non-fresh latest location (TBD)
  -- inMotion = false
  -- motionStopAssumption = false, etc.
(Exact order of the following calls - TBD)
- If Shock detection is configured, enable Shock Detection
- If Tracking is configured, enable Motion Detection
- Call Location Reading Function
- Call Check Geofencing Function (not in demo)
- Call Data Reading Function
- Disconnect imp-device
- Set Data Sending Timer

Shock Detection Callback
------------------------
- Set Shock Detected alert 
- Call Data Reading Function

Data Reading Timer Callback
---------------------------
- Call Data Reading Function

Data Reading Function
---------------------
- Cancel Data Reading Timer (if any)
- Read current data
  -- Temperature
  -- Battery Level (not in demo)
- Check alert events
  -- Alert event happens in case of a transition: non-alert condition (at the previous reading) -> alert condition (at the current reading)
- Create and save message:
  -- The following is included into the message:
     - TrackerId (deviceId)
     - Current timestamp (timestamp when data were read)
     - Current alert events (if any, by event or by polling)
     - Current read data
     - Saved the latest location
     - Current status: inMotion, TBD
  -- Send the message to ReplayMessenger:
     - It is not automatically sent to imp-agent, because imp-device is disconnected (in the most of cases)
- If there is at least one alert event (by event or by polling):
  -- Call Data Sending Function
- Set Data Reading Timer

Data Sending Timer Callback
---------------------------
- Call Data Sending Function

Data Sending Function
---------------------
- Cancel Data Sending Timer (if any)
- Connect imp-device
- Try to send all saved messages (if any)
  -- This is done automatically by ReplayMessenger
- When all messages are sent or data sending is too long (TBD), disconnect imp-device
- Set Data Sending Timer

Motion Detected Callback
------------------------
- Set motionStopAssumption = false
- If inMotion is false:
  -- (Motion start is detected)
  -- Set inMotion = true
  -- Cancel Location Reading Timer (if any, just in case)
  -- Call Location Reading Function
  -- Set Location Reading Timer
  -- Set Motion Started alert
  -- Call Data Reading Function

Location Reading Timer Callback
-------------------------------
- If motionStopAssumption is true:
  -- (Motion stop is confirmed)
  -- Set inMotion = false
  -- Set motionStopAssumption = false
  -- Set Motion Stopped alert
  -- Call Data Reading Function
- Otherwise:
  -- Call Location Reading Function
  -- Call Check Motion Stop Function
  -- If Geofencing is configured, call Check Geofencing Function (not in demo)
  -- Set Location Reading Timer

Location Reading Function
-------------------------
- Save the latest location as the previous location
- Try to determine the current location in the following order (till successfully determined):
  -- By BLE beacons (not in demo)
  -- By GNSS fix
  -- By WiFi hotspots (not in demo)
  -- By Cellular info
- If the current location is determined, save it as the latest location and mark it as fresh
- Otherwise, save the previous location as the latest location and mark it as non-fresh

Check Motion Stop Function
--------------------------
- If the latest location is fresh, check if the location is changed:
  -- Compare the previous and the latest locations, taking into account location accuracy and some difference threshold (TBD)
- If the location is not changed or the both, latest and previous, locations are non-fresh (ie. the location was not determined two times in a raw):
  -- (It might be that the motion is stopped, need to check/confirm that: if no motion is detected during the next location reading period => consider the motion is stopped)
  -- Set motionStopAssumption = true
  -- Enable Motion Detection

Check Geofencing Function (not in demo)
-------------------------
- If the latest location is fresh:
  -- Calculate/check if the location is inside or outside the geofencing zone, set the current flag (inside/outside).
  -- Compare with the saved previous flag (inside/outside).
  -- If the flags are different:
     - Set Geofence Entered / Geofence Exited alert 
     - Call Data Reading Function
  -- Save the current flag as the previous one

Northbound API (Data sending to the cloud)
------------------------------------------
- POST https://<cloud_api_url>/data
- Basic authentication - username/password are hardcoded (in demo) or configured (not in demo)
- Body with data in text (JSON) format
- Response code 200 from the cloud if the request/data is accepted
- No bufferization on imp-agent side
  -- Message received from imp-device is immediately sent to the cloud
  -- If OK is returned by the cloud, the message is ack-ed
  -- If an error is returned by the cloud, the message is not ack-ed

Data Message JSON
-----------------
{
   "trackerId": "c0010c2a69f088a4", // imp deviceId
   "timestamp": 1617900077, // Unix time, timestamp when data were read
   "status": {
     "inMotion": true
   },
   "location": {
     "fresh": true, // false - if the latest location has not beed determined, the provided data is the previous location
     "timestamp": 1617900070, // Unix time, timestamp when this location was determined
     "type": "gnss", // Possible values: "gnss", "cell", "wifi", "ble"
     "accuracy": 3, // in meters
     "lng": 30.571465,
     "lat": 59.749069
   },
   "sensors": {
     "batteryLevel": 64.32, // in %
     "temperature": 42.191177 // in Celsius
   },
   "alerts": [ // optional. Array of strings. Possible values: "temperatureHigh", "temperatureLow", "batteryLow", "shockDetected", "motionStarted", "motionStopped", "geofenceEntered", "geofenceExited"
     "temperatureHigh",
     "shockDetected"
   ]
}

