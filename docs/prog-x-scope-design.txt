ver 2021-11-28

Prog-X: scope
------------------

Releases:
- POC - subset of functionality on imp006 breakout board
- FT1 (Field Trial 1) - maximum possible functionality on imp006 breakout board
- FT2 (Field Trial 2) - full functionality on target board
- OS (Open Source) - open source version of FT2

Hardware:
- POC: standard imp006 breakout board
- FT1: imp006 breakout board + WiFi/BLE MIKROE-3542 ESP32-WROOM-32 + Ublox M8N GNSS
- FT2: a target board (imp006, BG95-M3 modem, MIKROE-3542, Ublox M8N, LIS2DH12, light sensor, user button)

- Subset of Configuration is hardcoded (POC only)
- Full runtime configuration - imp-Agent REST API (not in POC)
- Safeguards for non-effective cfg (not in POC)
- Recovery mode - "empty" cfg in case of non-recoverable "errors" (not in POC)

- Data from sensors:
  - Temperature
  - Battery level (by voltage) (not in POC)

- Alerts:
  - Temperature High
  - Temperature Low
  - Battery Low (not in POC)
  - Shock Detected
  - Motion Started
  - Motion Stopped
  - Geofence Entered (not in POC)
  - Geofence Exited (not in POC)
  - Theft Mode Activated (not in POC)
  - Tampering (not in POC, FT1)

- Location determination in the following order:
  - BLE beacons (not in POC),
  - GNSS,
  - WiFi networks (not in POC),
  - cell info

- Geofencing (one configurable zone) (not in POC)

- Motion start detection using Accelerometer

- Motion stop detection using Location (+ Accelerometer for confirmation)

- Repo/theft mode - activate tracking after some date (not in POC)

- Device is disconnected most of time
- Connected only when data sending to imp-agent is needed

- Back-off for GNSS fix (not in POC)

- No bufferization on imp-agent side
- Messages are forwarded to the cloud's REST API
  -- POST https://<cloud_api_url>/data
  -- Basic authentication - username/password are hardcoded
  -- Body with data in text (JSON) format
  -- Response code 200 from the cloud if the request/data is accepted
- The cloud's REST API is emulated on another imp

- Shipping mode - first wakeup by a user button (not in POC, FT1)

- Tampering detection by light sensor (not in POC, FT1)

- Super SIM OTA update (not in POC, FT1)

----------------------------------------
DETAILS
----------------------------------------
Data polling:
-------------
- Temperature
- Battery Level by voltage (not in POC)
- Light sensor (TBD) (not in POC, FT1)

Alerts
------
By event:
- Shock Detected
- Motion Started
- Motion Stopped
- Geofence Entered (not in POC)
- Geofence Exited (not in POC)
By polling:
- Temperature High
- Temperature Low
- Battery Low (not in POC)
- Tampering (TBD) (not in POC, FT1)

Activation after Shipping (not in POC, FT1)
-------------------------
TBD. Initial thoughts:
- After the first start (at factory ?) the app should go into deep sleep (?) - so called "shipping mode".
- There is a "button". It is "pressed" by a "user" when the device should start functioning (goes out from "shipping" mode).
- After that the app wakes up, sends the first report and starts normal working.
- The app should never go into deep sleep again.
- No more reactions to the "button".

Initialization Function (called after Imp restart)
-----------------------
- (not in POC, FT1) TBD - Recognize is it the first start, the wakeup from "shipping" mode or just a restart in a normal work.
- (not in POC) TBD - Recognize if there is a need to go to "recovery mode" - empty the configuration.
- (not in POC) Read from a permanent memory: configuration, latest location, latest status (TBD).
- (not in POC) There can be special situations:
  - "Empty" cfg - the app does nothing but waits for a new app version and/or new configuration
  - "Initial" cfg/status - default cfg and status (TBD) after first start (or after shipping mode) - TBD (is it the same as empty?)
  - "Defaults" - default settings if not explicitly specified in cfg - TBD
- (not in POC) Check if there is a new cfg from imp-Agent - TBD
- Initialize and start modules according to the current configuration and status - TBD.
- Disconnect imp-device
- Set Data Sending Timer

Shock Detection Callback
------------------------
- Set Shock Detected alert 
- Call Data Reading Function

Data Reading Timer Callback
---------------------------
- Call Data Reading Function

Data Reading Function
---------------------
- Cancel Data Reading Timer (if any)
- Read current data
  -- Temperature
  -- Battery Level (not in POC)
- Check alert events
  -- Alert event happens in case of a transition: non-alert condition (at the previous reading) -> alert condition (at the current reading)
- Create and save message:
  -- The following is included into the message:
     - TrackerId (deviceId)
     - Current timestamp (timestamp when data were read)
     - Current alert events (if any, by event or by polling)
     - Current read data
     - Saved the latest location
     - Current status: inMotion, TBD
  -- Send the message to ReplayMessenger:
     - It is not automatically sent to imp-agent, because imp-device is disconnected (in the most of cases)
- If there is at least one alert event (by event or by polling):
  -- Call Data Sending Function
- Set Data Reading Timer

Data Sending Timer Callback
---------------------------
- Call Data Sending Function

Data Sending Function
---------------------
- Cancel Data Sending Timer (if any)
- Connect imp-device
- Try to send all saved messages (if any)
  -- This is done automatically by ReplayMessenger
- When all messages are sent or data sending is too long (TBD), disconnect imp-device
- Set Data Sending Timer

Motion Detected Callback
------------------------
- Set motionStopAssumption = false
- If inMotion is false:
  -- (Motion start is detected)
  -- Set inMotion = true
  -- Cancel Location Reading Timer (if any, just in case)
  -- Call Location Reading Function
  -- Set Location Reading Timer
  -- Set Motion Started alert
  -- Call Data Reading Function

Location Reading Timer Callback
-------------------------------
- If motionStopAssumption is true:
  -- (Motion stop is confirmed)
  -- Set inMotion = false
  -- Set motionStopAssumption = false
  -- Set Motion Stopped alert
  -- Call Data Reading Function
- Otherwise:
  -- Call Location Reading Function
  -- Call Check Motion Stop Function
  -- If Geofencing is configured, call Check Geofencing Function (not in POC)
  -- Set Location Reading Timer

Location Reading Function
-------------------------
- Save the latest location as the previous location
- Try to determine the current location in the following order (till successfully determined):
  -- By BLE beacons (not in POC)
  -- By GNSS fix
  -- By WiFi hotspots (not in POC)
  -- By Cellular info
- If the current location is determined, save it as the latest location and mark it as fresh
- Otherwise, save the previous location as the latest location and mark it as non-fresh

Check Motion Stop Function
--------------------------
- If the latest location is fresh, check if the location is changed:
  -- Compare the previous and the latest locations, taking into account location accuracy and some difference threshold (TBD)
- If the location is not changed or the both, latest and previous, locations are non-fresh (ie. the location was not determined two times in a raw):
  -- (It might be that the motion is stopped, need to check/confirm that: if no motion is detected during the next location reading period => consider the motion is stopped)
  -- Set motionStopAssumption = true
  -- Enable Motion Detection

Check Geofencing Function (not in POC)
-------------------------
- If the latest location is fresh:
  -- Calculate/check if the location is inside or outside the geofencing zone, set the current flag (inside/outside).
  -- Compare with the saved previous flag (inside/outside).
  -- If the flags are different:
     - Set Geofence Entered / Geofence Exited alert 
     - Call Data Reading Function
  -- Save the current flag as the previous one

Repo/theft mode - activate tracking after some date (not in POC)
---------------------------------------------------
TBD

Northbound API (Data sending to the cloud)
------------------------------------------
- POST https://<cloud_api_url>/data
- Basic authentication - username/password are hardcoded (in POC) or configured (TBD, not in POC)
- Body with data in text (JSON) format
- Response code 200 from the cloud if the request/data is accepted
- No bufferization on imp-agent side
  -- Message received from imp-device is immediately sent to the cloud
  -- If OK is returned by the cloud, the message is ack-ed
  -- If an error is returned by the cloud, the message is not ack-ed

Data Message JSON
-----------------
{
   "trackerId": "c0010c2a69f088a4", // imp deviceId
   "timestamp": 1617900077, // Unix time, timestamp when data were read
   "status": {
     "inMotion": true
   },
   "location": {
     "fresh": true, // false - if the latest location has not beed determined, the provided data is the previous location
     "timestamp": 1617900070, // Unix time, timestamp when this location was determined
     "type": "gnss", // Possible values: "gnss", "cell", "wifi", "ble"
     "accuracy": 3, // in meters
     "lng": 30.571465,
     "lat": 59.749069
   },
   "sensors": {
     "batteryLevel": 64.32, // in %
     "temperature": 42.191177 // in Celsius
   },
   "alerts": [ // optional. Array of strings. Possible values: "temperatureHigh", "temperatureLow", "batteryLow", "shockDetected", "motionStarted", "motionStopped", "geofenceEntered", "geofenceExited"
     "temperatureHigh",
     "shockDetected"
   ]
}

Southbound API (Configuration sending from the cloud) (not in POC)
-----------------------------------------------------
REST API in imp-Agent.
Algorithm for cfg processing.
Safeguards for non-effective cfg.
TBD

Recovery Mode (not in POC)
-------------
TBD
